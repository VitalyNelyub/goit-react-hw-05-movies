{"version":3,"file":"static/js/809.9d84d4df.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAM,mCAEL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACoBC,EAAAA,EAAAA,IAAA,UACpBJ,EADoB,kBACFG,EADE,4BACoBF,EADpB,oBADpB,cACCI,EADD,yBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,gFACCI,EADD,UACuBP,EADvB,kBACyCG,EADzC,oBACuDF,EADvD,4BAGqBG,EAAAA,EAAAA,IAAA,UAAaG,IAHlC,cAGCC,EAHD,yBAIEA,GAJF,kEAOA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACqBL,EAAAA,EAAAA,IAAA,UACrBJ,EADqB,uCACkBC,IAFvC,cACCO,EADD,yBAIEA,GAJF,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA4BP,GAA5B,uFACqBC,EAAAA,EAAAA,IAAA,UACrBJ,EADqB,kBACHG,EADG,4BACmBF,EADnB,2BADrB,cACCU,EADD,yBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACqBT,EAAAA,EAAAA,IAAA,UACrBJ,EADqB,iCACYC,EADZ,4DACmEY,IAFxF,cACCL,EADD,yBAIEA,GAJF,kE,2GChCP,EAAgC,+B,SCKjB,SAASM,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOJ,EAAP,KAAoBK,EAApB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACY,OAAhBR,IACFD,EAAAA,EAAAA,IAAaO,GAASG,MAAK,SAAAC,GACQ,IAA7BA,EAAKA,KAAKC,QAAQC,QAAcP,EAAeK,EAAKA,KAAKC,QAC9D,GAEJ,GAAE,CAACX,EAAaM,KAGf,yBACGN,EACCA,EAAYa,KAAI,SAAAH,GAAI,OAClB,4BACE,wBAAKA,EAAKI,UACV,cAAGC,UAAWC,EAAd,SAAkCN,EAAKO,YCN/B,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAC9B,EAAI+B,GAWvD,OARE/B,IAFF+B,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGT,GAAE,GAbe,CDIAG,GADQ,KAOpB,iCACE,wCACA,gBACEC,IAAI,sTACJC,IAAI,QACJC,MAAO,IACPC,OAAQ,UAMnB,C","sources":["Api/ApiSearch.js","webpack://react-homework-template/./src/components/Module.css/Reviews.module.css?ce64","components/Reviews.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '963109e7e79ebe88fb21387185fe2d50';\n\nexport async function fetchCastMovie(id) {\n  const castMovies = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return castMovies;\n}\n\nexport async function fetchDetailMovie(id) {\n  const URL_DETAIL_MOVIE = `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`;\n\n  const mostPopular = await axios.get(`${URL_DETAIL_MOVIE}`);\n  return mostPopular;\n}\n\nexport async function fetchMostPopolarMovies() {\n  const mostPopular = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n  return mostPopular;\n}\n\nexport async function fetchReviews(id) {\n  const dataReviews = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return dataReviews;\n}\n\nexport async function searchMovies(query) {\n  const mostPopular = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return mostPopular;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews__text\":\"Reviews_reviews__text__Il4o2\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {fetchReviews} from 'Api/ApiSearch';\nimport css from './Module.css/Reviews.module.css';\nimport { nanoid } from 'nanoid';\n\nexport default function Reviews() {\n  const [dataReviews, setDataReviews] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (dataReviews === null) {\n      fetchReviews(movieId).then(data => {\n        if (data.data.results.length !== 0) setDataReviews(data.data.results);\n      });\n    }\n  }, [dataReviews, movieId]);\n\n  return (\n    <div>\n      {dataReviews ? (\n        dataReviews.map(data => (\n          <div key={nanoid()}>\n            <h2>{data.author}</h2>\n            <p className={css.reviews__text}>{data.content}</p>\n          </div>\n        ))\n      ) : (\n        <>\n          <h2>NO REVIEWS</h2>\n          <img\n            src=\"https://media.istockphoto.com/id/1149317024/ru/%D0%B2%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F/%D1%81%D0%BC%D0%B0%D0%B9%D0%BB%D0%B8%D0%BA-%D1%81%D0%BE-%D0%B7%D0%BD%D0%B0%D0%BA%D0%BE%D0%BC-%D0%B6%D0%B0%D0%BB%D0%BE%D1%81%D1%82%D0%B8.jpg?s=612x612&w=0&k=20&c=wcgWMyG4rO8Si64RHorEWNdcN862AdrLPeSd5o4B35M=\"\n            alt=\"sorry\"\n            width={220}\n            height={200}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["BASE_URL","KEY","fetchCastMovie","id","axios","castMovies","fetchDetailMovie","URL_DETAIL_MOVIE","mostPopular","fetchMostPopolarMovies","fetchReviews","dataReviews","searchMovies","query","Reviews","useState","setDataReviews","movieId","useParams","useEffect","then","data","results","length","map","author","className","css","content","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","src","alt","width","height"],"sourceRoot":""}